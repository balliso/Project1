---
title: "Project1"
format: html
editor: visual
---

## Data Processing

```{r}
library(tidycensus)
library(httr)
library(jsonlite)
library(dplyr)
library(tidyverse)
```

Using PUMS data from the Census API, we are going to complete the data processing part of Project 1. First we will read in the data, then create some functions to query the API and return a tibble. The following code chunk is reading in the data, then checking the structure so we can figure out how to turn it into a tibble.

```{r}
pums_URL <- "https://api.census.gov/data/2022/acs/acs1/pums?get=SEX,PWGTP,MAR&SCHL=24"
pums_data <- httr::GET(pums_URL)
str(pums_data)
```

Next, we need to write a helper function that can take the output of GET() and turn it into a tibble. The function was written generally, so it can be used for any Census API query. Then, we plugged in the PUMS data to return a tibble.

```{r}
clean_census <- function(resp) {
  pums_parsed <- fromJSON(rawToChar(resp$content))
  colnames(pums_parsed) <- pums_parsed[1,]
  pums_info <- as_tibble(pums_parsed[-1,])
  return(pums_info)
}
pums_info <- clean_census(pums_data)
pums_info
```








#Writing a Generic Function for Summarizing

```{r}
library(dplyr)
#Run these in your console
plot.function #what is used for a class = function
getS3method("plot","data.frame") #what is used for a class = data frame
plot
#Add our own class to our census data for summarizing purposes.
class(pums_info) <- c("census", class(pums_info))
#check structure of tibble
str(pums_info)
summary.census <- function(census, numeric_vector, car_vars){
#assigning weight to the column PWGTP in the data
  weight <- census$PWGTP
# numeric summaries
 
  
  numeric_summary<-list(mean=x,sd=y)
 
# categorical summaries
    
}

#summarize_census(census, c(income, age), c(gender, education))
```